" Hybrid line numbers outside of INSERT mode and absolute line numbers inside INSERT numbers
set number relativenumber

augroup numbertoggle
	autocmd!
	autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
	autocmd BufLeave,FocusLost,InsertEnter * set norelativenumber
augroup END

" Make backspace work like in most programs (apparently Vim has a feature that tries
" to prevent you from unintentionally removing indentation exept it makes using backspace
" really annoying)
set backspace=indent,eol,start

" UTF-8 encoding
set encoding=utf-8
{#@@
	For some reason, on NixOS, changing the following settings
	to try to consolidate where Vim spits out all of its files
	fails with error E303. I've tried several things to get it
	to work and just cannot fix it; that's why the following
	is only on macOS. I wonder if Neovim has the same problem?
@@#}
{%@@ if profile == "macos" @@%}
" Settings to make Vim respect the XDG base directory specification
set undodir=$HOME/Library/Application\ Support/org.vim.Vim/undo
set directory=$HOME/Library/Application\ Support/org.vim.Vim/swap
set backupdir=$HOME/Library/Application\ Support/org.vim.Vim/backup
set viewdir=$HOME/Library/Application\ Support/org.vim.Vim/view
set viminfo+='1000,n$HOME/Library/Application\ Support/org.vim.Vim/viminfo
set runtimepath=$HOME/Library/Application\ Support/org.vim.Vim,$VIMRUNTIME,$HOME/Library/Application\ Support/org.vim.Vim/after
set packpath=$HOME/Library/Application\ Support/org.vim.Vim,/usr/local/share/vim/vimfiles,$VIMRUNTIME,/usr/local/share/vim/vimfiles/after,$HOME/Library/Application\ Support/org.vim.Vim/after
" packpath=~/.vim,/usr/local/share/vim/vimfiles,/usr/local/share/vim/vim82,/usr/local/share/vim/vimfiles/after,~/.vim/after
{%@@ endif @@%}

" Enable autocompletion
set wildmode=longest,list,full

" Syntax highlighting
syntax on
autocmd BufRead,BufNewFile *.zsh* set syntax=zsh

" Make a tab appear to be 4 spaces wide (https://stackoverflow.com/questions/1878974/redefine-tab-as-4-spaces)
set tabstop=4 softtabstop=0 noexpandtab shiftwidth=4
" Unless we're in a *.nix or *.zsh* or *.yaml file, and then I want the tab key to
" literally be 2 spaces
autocmd BufRead,BufNewFile *.nix,*.zsh*,*.yaml set tabstop=2 softtabstop=0 expandtab shiftwidth=2

autocmd BufRead,BufNewFile *.py set expandtab
