set-option -g  default-shell      "{{@@ env['SHELL'] @@}}"
set-option -g  default-terminal   "tmux-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# Send prefix
set-option -g prefix C-w
unbind-key C-w
bind-key   C-w send-prefix

# Vim keybindings
set-window-option -g mode-keys vi

# Vim keybindings: switching between panes
# but also switching between splits within Vim!
# (graciously taken from christoomey/vim-tmux-navigator...
# switching between splits in Vim also requires the christoomey/vim-tmux-navigator Vim plugin)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key   -T prefix h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind-key   -T prefix j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind-key   -T prefix k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
unbind-key -T prefix l
bind-key   -T prefix l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"

# Vim keybindings: selection in copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# New windows start in working directory of pane window was created from
unbind-key -T prefix c
bind-key   -T prefix c new-window -c "#{pane_current_path}"

# Windows start counting at 1
set-option -g base-index 1

# Windows automatically renumber themselves
set-option -g renumber-windows on

# Set easier window split keys
bind-key v split-window -h -c "#{pane_current_path}"
bind-key H split-window -v -c "#{pane_current_path}"

# Mouse support
set-option -g mouse on

# Scroll one line at a time
bind -T copy-mode-vi WheelUpPane   send-keys -N 1 -X scroll-up
bind -T copy-mode-vi WheelDownPane send-keys -N 1 -X scroll-down
