" Hybrid line numbers outside of INSERT mode and absolute line numbers inside INSERT mode
set number relativenumber

augroup numbertoggle
	autocmd!
	autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
	autocmd BufLeave,FocusLost,InsertEnter * set norelativenumber
augroup END

" Make backspace work like in most programs (apparently Vim has a feature that tries
" to prevent you from unintentionally removing indentation except it makes using backspace
" really annoying)
set backspace=indent,eol,start

" UTF-8 encoding
set encoding=utf-8

{%@@ if profile == "macos" @@%}
" Settings to make Vim not clutter the home directory
set undodir=$HOME/Library/Application\ Support/org.vim.Vim/undo | call mkdir(&undodir, 'p')
set directory=$HOME/Library/Application\ Support/org.vim.Vim/swap | call mkdir(&directory, 'p')
set backupdir=$HOME/Library/Application\ Support/org.vim.Vim/backup | call mkdir(&backupdir, 'p')
set viewdir=$HOME/Library/Application\ Support/org.vim.Vim/view | call mkdir(&viewdir, 'p')
set viminfo+='1000,n$HOME/Library/Application\ Support/org.vim.Vim/viminfo
set runtimepath=$HOME/Library/Application\ Support/org.vim.Vim,$VIMRUNTIME,$HOME/Library/Application\ Support/org.vim.Vim/after
set packpath=$HOME/Library/Application\ Support/org.vim.Vim,/usr/local/share/vim/vimfiles,$VIMRUNTIME,/usr/local/share/vim/vimfiles/after,$HOME/Library/Application\ Support/org.vim.Vim/after
" packpath=~/.vim,/usr/local/share/vim/vimfiles,/usr/local/share/vim/vim82,/usr/local/share/vim/vimfiles/after,~/.vim/after
{%@@ endif @@%}

" Enable autocompletion
set wildmode=longest,list,full

" Files that end in .toml are TOML files
autocmd BufRead,BufNewFile *.toml set filetype=toml

" Only enable the vim-toml plugin if we are in a *.toml file
autocmd FileType toml packadd! vim-toml

" Syntax highlighting
syntax on
colorscheme koehler
autocmd BufRead,BufNewFile *.zsh* set syntax=zsh

" Highlight all matches when searching with '/' or '?'
set hlsearch
" Show matches as you find them
set incsearch
" Remove all highlighted matches upon pressing Escape
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
" Smart case search: case-insensitive when search query does not contain
" any capital letters, case-sensitive otherwise
set smartcase

" Graciously taken from https://gist.github.com/benawad/b768f5a5bbd92c8baabd363b7e79786f
" Make j/k move along lines that wrap
noremap <silent> <expr> j (v:count == 0 ? 'gj' : 'j')
noremap <silent> <expr> k (v:count == 0 ? 'gk' : 'k')

" Detect the file type and automatically indent, following the indentation rules of the detected programming language
filetype plugin indent on

" Make a tab appear to be 4 spaces wide (https://stackoverflow.com/questions/1878974/redefine-tab-as-4-spaces)
set tabstop=4 softtabstop=0 noexpandtab shiftwidth=4
" Unless we're in a *.nix or *.zsh* or *.yaml file, and then I want the tab key to literally be 2 spaces
autocmd BufRead,BufNewFile *.nix,*.zsh*,*.yaml set tabstop=2 softtabstop=0 expandtab shiftwidth=2
" Use spaces instead of tabs in Python files
autocmd BufRead,BufNewFile *.py set expandtab

" Use Ctrl+a to toggle showing hidden characters or not
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
nnoremap <silent> <C-l> :set list!<CR>

" Settings for NERDTree, a file finder that appears at the left
" Show NERDTree if no files were specified when invoking Vim
autocmd StdinReadPre * let s:std_in = 1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Bind Ctrl-N to toggle opening and closing NERDTree
nmap <C-n> :NERDTreeToggle<CR>

" :q quits even when NERDTree is open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Show hidden files all the time (it would be cool if I could just change this on the fly and have this
" automatically update without having to close and re-open NERDTree, similar to how I can just do
" :toggle_hidden in Broot)
let NERDTreeShowHidden = 1

" Settings for NERDTree-git-plugin which integrates NERDTree with Git
let g:NERDTreeGitStatusUseNerdFonts = 1 " Use Nerd fonts
let g:NERDTreeGitStatusConcealBrackets = 1 " Hide the [ ] around the icons

" Settings for vim-gitgutter
set updatetime=300
highlight! link SignColumn LineNr
let g:gitgutter_set_sign_backgrounds = 1
